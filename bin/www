const { io, http } = require("../app");
const debug = require("debug")("simple-express:server");

const port = normalizePort(process.env.PORT || "8080");

http.listen(port, () => {
  console.log("listening on *:8080");
});

http.on("error", onError);
http.on("listening", onListening);

io.on("connection", (socket) => {
  console.log("User connected!");
  socket.emit("message", "User connected!");
});

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = http.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
